package main

import "os"

//Go语言标准库中输出流是Writer接口, 将程序中的数据写到外部
/*
	type Writer interface {
		Write(p []byte) (n int, err error)
	}
*/
//输出的时候打开文件不能使用os.Open(), 因为是只读的
/*
	OpenFile第三个参数是文件权限, 编译时转换成二进制
	第一位总是0
	第二位为读权限，0表示不可读，1为可读
	第三位为写权限
	第四位为执行权限
	整理如下:
	   0(0000): 不可读写,不能被执行
	   1(0001): 不可读写,能被执行
	   2(0010): 可写不可读,不能被执行
	   3(0011): 可写不可读,能被执行
	   4(0100): 可读不可写,不能被执行
	   5(0101): 可读不可写,能被执行
	   6(0110): 可读写,不能执行
	   7(0111): 可读写,可执行

	0666:
	第一个 0 表示这个数是 八进制
	第一个 6 表示文件拥有者有读写权限，但没有执行权限 0110
	第二个 6 表示文件拥有者同组用户有读写权限，但没有执行权限 0110
	第三个 6 表示其它用户有读写权限，但没有执行权限 0110
*/
func main()  {
	f, err := os.OpenFile("path.txt", os.O_APPEND, 0660)
	if err != nil {
		//	创建文件
		f, _ = os.Create("path")
	}
	f.Write([]byte("writer流写入数据"))
	f.WriteString("\r\n再次写入数据\t哈哈哈")
}
